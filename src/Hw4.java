public class Hw4 {
    public static void main(String[] args) {
        System.out.println(abs(-1));
        System.out.println(safeDiv(5, 2));
        System.out.println(max(-1, -5));
        System.out.println(makeDecision(-1, 7));
        System.out.println(max3(-10, -7, -5));
        System.out.println(sum3(1, 2, 1));
        System.out.println(sum2(19, 2));
        System.out.println(is35(30));
        System.out.println(magic6(1, 6));
        System.out.println(age(20223));
        System.out.println(day(5));
        printDays("ВтОрНик");

    }

    // 1. Необходимо реализовать метод таким образом, чтобы он возвращал модуль числа х
    // (если он был положительным, то таким и остается, если он был отрицательным –
    // то необходимо вернуть его без знака минус).
    public static int abs(int x) {
        return Math.abs(x);
    }

    //2. Необходимо реализовать метод таким образом, чтобы он возвращал деление x на y, и при этом гарантировал,
    // что не будет выкинута ошибка деления на 0. При делении на 0 следует вернуть из метода число 0.
    public static int safeDiv(int x, int y) {
        if (x == 0 || y == 0) {
            return 0;
        } else return x / y;
    }

    //3. Необходимо реализовать метод таким образом, чтобы он возвращал максимальное
    // значение из двух полученных методом чисел.
    public static int max(int x, int y) {
        return Math.max(x, y);
    }

    //4. Необходимо реализовать метод таким образом, чтобы он возвращал строку,
    // которая включает два принятых методом числа и корректно выставленный знак операции сравнения
    // (больше, меньше, или равно).
    public static String makeDecision(int x, int y) {
        if (x > y) {
            return ("результат: " + x + " > " + y);
        } else if (x < y) {
            return ("результат: " + x + " < " + y);
        } else {
            return ("результат: " + x + " = " + y);
        }
    }

    //5. Необходимо реализовать метод таким образом, чтобы он возвращал максимальное из трех полученных методом чисел.
    // Подсказка: идеальное решение включает всего две инструкции if и не содержит вложенных if.
    public static int max3(int x, int y, int z) {
        if (x > y && x > z) {
            return x;
        } else if (y > x && y > z) {
            return y;
        }
        return z;
    }

    //6. Необходимо реализовать метод таким образом, чтобы он возвращал true, если два любых числа (из трех принятых)
    // можно сложить так, чтобы получить третье.
    public static boolean sum3(int x, int y, int z) {
        if (x + y == z) {
            return true;
        } else if (x + z == y) {
            return true;
        } else if (y + z == x) {
            return true;
        } else return false;
    }

    //7. Необходимо реализовать метод таким образом, чтобы он возвращал сумму чисел x и y.
    // Однако, если сумма попадает в диапазон от 10 до 19, то надо вернуть число 20.
    public static int sum2(int x, int y) {
        if ((x + y) >= 10 && (x + y) <= 19) {
            return 20;
        }
        return x + y;
    }

    //8. Необходимо реализовать метод таким образом, чтобы он возвращал true, если число x делится нацело на 3 или 5.
    // При этом, если оно делится и на 3, и на 5, то вернуть надо false.
    // Подсказка: оператор % позволяет получить остаток от деления.
    public static boolean is35(int x) {
        if (x % 3 == 0 && x % 5 == 0) {
            return false;
        } else if (x % 3 == 0 || x % 5 == 0) {
            return true;
        }
        return false;
    }

    //9. Необходимо реализовать метод таким образом, чтобы он возвращал true,
    // если одно из принятых методом чисел равно шести, или их сумма равна шести, или разница между ними равна шести.
    public static boolean magic6(int x, int y) {
        if (x == 6 || y == 6) {
            return true;
        } else if (x + y == 6) {
            return true;
        } else if (x - y == 6 || y - x == 6) {
            return true;
        }
        return false;
    }


    //10. Необходимо реализовать метод таким образом, чтобы он возвращал строку, в которой сначала будет число х,
    // а затем одно из слов:
    //год
    //года
    //лет
    //Слово “год” добавляется, если число х заканчивается на 1, кроме чисел оканчивающихся на 11.
    //
    //Слово “года” добавляется, если число х заканчивается на 2, 3 или 4, кроме чисел оканчивающихся на 12, 13, 14.
    //
    //Слово “лет” добавляется во всех остальных случаях.
    //
    //Подсказка: оператор % позволяет получить остаток от деления.
    public static String age(int x) {
        if ((x == 1 || x % 10 == 1) && (x != 11 && x % 100 != 11)) {
            return ("результат: " + x + " год");
        } else if ((x % 10 == 2 || x % 10 == 3 || x % 10 == 4) && ((x != 12 && x % 100 != 12)
                && (x != 13 && x % 100 != 13) && (x != 14 && x % 100 != 14))) {
            return ("результат: " + x + " года");
        }
        return ("результат: " + x + " лет");
    }


    //11. Метод принимает число x, обозначающее день недели. Необходимо реализовать метод таким образом,
    //чтобы он возвращал строку, которая будет обозначать текущий день недели, где 1- это понедельник,
    //а 7 – воскресенье. Если число не от 1 до 7 то верните текст “это не день недели”.
    //Вместо if в данной задаче используйте switch.
    public static String day(int x) {
        return switch (x) {
            case 1 -> "результат: понедельник";
            case 2 -> "результат: вторник";
            case 3 -> "результат: среда";
            case 4 -> "результат: четверг";
            case 5 -> "результат: пятница";
            case 6 -> "результат: суббота";
            case 7 -> "результат: воскресенье";
            default -> "это не день недели";
        };
    }

    //12. В качестве параметра метод принимает строку, в которой записано название дня недели.
    // Необходимо реализовать метод таким образом, чтобы он выводил на экран название переданного в него дня
    // и всех последующих до конца недели дней. Если в качестве строки передан не день, то выводится текст
    // “это не день недели”. Первый день понедельник, последний – воскресенье.
    // Вместо if в данной задаче используйте switch.
    //
    //Обратите внимание, что делать для каждого из case вывод сразу всех дней
    // (например case “понедельник” sout(“понедельник вторник среда четверг пятница суббота воскресенье”)
    // – решение явно некорректное. Попробуйте применить для решения задачи принцип падения сквозь метки.
    public static void printDays(String x) {
        switch (x.toLowerCase()) {
            default:
                System.out.println("это не день недели");
                break;
            case "понедельник":
                System.out.println("понедельник");
            case "вторник":
                System.out.println("вторник");
            case "среда":
                System.out.println("среда");
            case "четверг":
                System.out.println("четверг");
            case "пятница":
                System.out.println("пятница");
            case "суббота":
                System.out.println("суббота");
            case "воскресенье":
                System.out.println("воскресенье");
        }
    }
}






